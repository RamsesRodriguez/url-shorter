---
import { nanoid } from "nanoid";
import { and, eq } from "drizzle-orm";

import { Input } from "@/components/ui/input";
import { Button, buttonVariants } from "@/components/ui/button";
import { CopyButton } from "@/components/copy-button";
import { db } from "@/db";
import { links } from "@/db/schema";
import { cn } from "@/lib/utils";

import Layout from "../layouts/layout.astro";
import { config } from "@/config";

const authRequest = Astro.locals.auth;
const session = await authRequest.validate();

type NewLink = typeof links.$inferInsert;
let newLink: NewLink | null = null;

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const url = data.get("url");
    const randomSlug = nanoid(6);

    const insertLink = async (user: NewLink) => {
      return db.insert(links).values(user);
    };

    newLink = {
      slug: randomSlug,
      originalLink: url?.toString()!,
      creatorId: session?.user?.id!,
    };

    console.log({
      slug: randomSlug,
      originalLink: url?.toString()!,
      creatorId: session?.user?.id!,
    });

    const result = await db
      .select({
        slug: links.slug,
      })
      .from(links)
      .where(
        and(
          eq(links.creatorId, session?.user.id!),
          eq(links.originalLink, url?.toString()!)
        )
      );
    if (result) {
      newLink = {
        slug: result[0].slug,
        originalLink: url?.toString()!,
        creatorId: session?.user?.id!,
      };
    } else {
      await insertLink(newLink);
    }
  } catch (error) {
    newLink = null;

    if (error instanceof Error) {
      console.error(error);
    }
  }
}
---

<Layout title="Welcome to Astro.">
  <div class="max-w-6xl w-full mx-auto grid gap-2">
    <h1 class="font-semibold text-3xl mx-auto pb-6">URL Shorter</h1>
    <div
      class="flex flex-1 flex-wrap flex-col justify-center items-center w-full"
    >
      {
        !session ? (
          <>
            <p class="text-lg text-gray-600 dark:text-gray-400 max-w-[60ch]">
              Welcome to our URL shortening service. Please login to proceed.
            </p>
            <div class="flex flex-1 w-auto justify-center items-center">
              <a href="/login/github.json">
                <div
                  class={cn(
                    buttonVariants({
                      variant: "default",
                      class: "relative",
                    })
                  )}
                >
                  Login with Github
                </div>
              </a>
            </div>
          </>
        ) : (
          <>
            <p class="text-lg text-gray-600 dark:text-gray-400 max-w-[60ch]">
              Welcome to our URL shortening service. You can procede to your
              Dashboard to see all your shortened URLs. Or create a new link
              with the form bellow.
            </p>
            {newLink ? (
              <code class="relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm">
                <CopyButton
                  value={`${config.env.PUBLIC_SITE_URL}/r/${newLink.slug}`}
                  client:load
                />
                /r/{newLink.slug}
              </code>
            ) : (
              <form
                class="gap-4 flex flex-1 flex-col items-center justify-start"
                method="POST"
              >
                <div class="space-y-2 w-56 pt-10">
                  <Input
                    id="url"
                    required
                    type="url"
                    name="url"
                    placeholder="New link"
                  />
                </div>
                <Button type="submit" className="w-full">
                  Shorten URL
                </Button>
              </form>
            )}
          </>
        )
      }
    </div>
  </div>
</Layout>
